/// <reference types="react" />
import type { Attrs, Node } from 'prosemirror-model';
import type { Decoration, DecorationSource, EditorView, NodeViewConstructor } from 'prosemirror-view';
import type { ReactNodeViewUserOptions } from './ReactNodeViewOptions';
export type NodeViewContentRef = (node: HTMLElement | null) => void;
export interface NodeViewContext {
    contentRef: NodeViewContentRef;
    view: EditorView;
    getPos: () => number | undefined;
    setAttrs: (attrs: Attrs) => void;
    node: Node;
    selected: boolean;
    decorations: readonly Decoration[];
    innerDecorations: DecorationSource;
}
export declare const nodeViewContext: import("react").Context<NodeViewContext>;
export declare const useNodeViewContext: () => NodeViewContext;
export declare const createNodeViewContext: import("react").Context<(options: ReactNodeViewUserOptions) => NodeViewConstructor>;
export declare const useNodeViewFactory: () => (options: ReactNodeViewUserOptions) => NodeViewConstructor;
