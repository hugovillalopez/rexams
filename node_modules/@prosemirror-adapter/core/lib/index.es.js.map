{"version":3,"file":"index.es.js","sources":["../src/nodeView/CoreNodeView.ts","../src/pluginView/CorePluginView.ts","../src/widgetView/CoreWidgetView.ts"],"sourcesContent":["/* Copyright 2021, Prosemirror Adapter by Mirone. */\nimport type { Attrs, Node } from 'prosemirror-model'\nimport type { Decoration, DecorationSource, EditorView, NodeView } from 'prosemirror-view'\n\nimport type { CoreNodeViewSpec, CoreNodeViewUserOptions } from './CoreNodeViewOptions'\n\nexport class CoreNodeView<ComponentType> implements NodeView {\n  dom: HTMLElement\n  contentDOM: HTMLElement | null\n  node: Node\n  view: EditorView\n  getPos: () => number | undefined\n  decorations: readonly Decoration[]\n  innerDecorations: DecorationSource\n  options: CoreNodeViewUserOptions<ComponentType>\n  selected = false\n  setSelection?: (anchor: number, head: number, root: Document | ShadowRoot) => void\n  stopEvent?: (event: Event) => boolean\n\n  #createElement(as?: string | HTMLElement | ((node: Node) => HTMLElement)) {\n    const { node } = this\n    return as == null\n      ? document.createElement(node.isInline ? 'span' : 'div')\n      : as instanceof HTMLElement\n        ? as\n        : as instanceof Function\n          ? as(node)\n          : document.createElement(as)\n  }\n\n  createDOM(as?: string | HTMLElement | ((node: Node) => HTMLElement)) {\n    return this.#createElement(as)\n  }\n\n  createContentDOM(as?: string | HTMLElement | ((node: Node) => HTMLElement)) {\n    return this.#createElement(as)\n  }\n\n  constructor({ node, view, getPos, decorations, innerDecorations, options }: CoreNodeViewSpec<ComponentType>) {\n    this.node = node\n    this.view = view\n    this.getPos = getPos\n    this.decorations = decorations\n    this.innerDecorations = innerDecorations\n    this.options = options\n\n    this.dom = this.createDOM(options.as)\n    this.contentDOM = node.isLeaf ? null : this.createContentDOM(options.contentAs)\n    this.dom.setAttribute('data-node-view-root', 'true')\n    if (this.contentDOM) {\n      this.contentDOM.setAttribute('data-node-view-content', 'true')\n      this.contentDOM.style.whiteSpace = 'inherit'\n    }\n\n    this.setSelection = options.setSelection\n    this.stopEvent = options.stopEvent\n  }\n\n  get component() {\n    return this.options.component\n  }\n\n  selectNode = () => {\n    this.selected = true\n    this.options.selectNode?.()\n  }\n\n  deselectNode = () => {\n    this.selected = false\n    this.options.deselectNode?.()\n  }\n\n  shouldUpdate: (node: Node) => boolean = (node) => {\n    if (node.type !== this.node.type)\n      return false\n\n    if (node.sameMarkup(this.node) && node.content.eq(this.node.content))\n      return false\n\n    return true\n  }\n\n  update: (node: Node, decorations: readonly Decoration[], innerDecorations: DecorationSource) => boolean = (\n    node,\n    decorations,\n    innerDecorations,\n  ) => {\n    const userUpdate = this.options.update\n    let result\n    if (userUpdate)\n      result = userUpdate(node, decorations, innerDecorations)\n\n    if (typeof result !== 'boolean')\n      result = this.shouldUpdate(node)\n\n    this.node = node\n    this.decorations = decorations\n    this.innerDecorations = innerDecorations\n\n    if (result)\n      this.options.onUpdate?.()\n\n    return result\n  }\n\n  shouldIgnoreMutation: (mutation: MutationRecord) => boolean = (mutation) => {\n    if (!this.dom || !this.contentDOM)\n      return true\n\n    if (this.node.isLeaf || this.node.isAtom)\n      return true\n\n    if ((mutation.type as unknown) === 'selection')\n      return false\n\n    if (this.contentDOM === mutation.target && mutation.type === 'attributes')\n      return true\n\n    if (this.contentDOM.contains(mutation.target))\n      return false\n\n    return true\n  }\n\n  ignoreMutation: (mutation: MutationRecord) => boolean = (mutation) => {\n    if (!this.dom || !this.contentDOM)\n      return true\n\n    let result\n\n    const userIgnoreMutation = this.options.ignoreMutation\n\n    if (userIgnoreMutation)\n      result = userIgnoreMutation(mutation)\n\n    if (typeof result !== 'boolean')\n      result = this.shouldIgnoreMutation(mutation)\n\n    return result\n  }\n\n  destroy: () => void = () => {\n    this.options.destroy?.()\n    this.dom.remove()\n    this.contentDOM?.remove()\n  }\n\n  setAttrs = (attr: Attrs) => {\n    const { dispatch, state } = this.view\n    const pos = this.getPos()\n\n    if (typeof pos !== 'number')\n      return\n\n    return dispatch(\n      state.tr.setNodeMarkup(pos, undefined, {\n        ...this.node.attrs,\n        ...attr,\n      }),\n    )\n  }\n}\n","/* Copyright 2021, Prosemirror Adapter by Mirone. */\nimport type { EditorState, PluginView } from 'prosemirror-state'\nimport type { EditorView } from 'prosemirror-view'\nimport type { CorePluginViewSpec, CorePluginViewUserOptions } from './CorePluginViewOptions'\n\nexport class CorePluginView<ComponentType> implements PluginView {\n  view: EditorView\n  prevState?: EditorState\n  options: CorePluginViewUserOptions<ComponentType>\n\n  constructor(spec: CorePluginViewSpec<ComponentType>) {\n    this.view = spec.view\n    this.options = spec.options\n  }\n\n  get component() {\n    return this.options.component\n  }\n\n  get root() {\n    let root = this.options.root?.(this.view.dom)\n\n    if (!root)\n      root = this.view.dom.parentElement ?? document.body\n\n    return root\n  }\n\n  update(view: EditorView, prevState: EditorState) {\n    this.view = view\n    this.prevState = prevState\n    this.options.update?.(view, prevState)\n  }\n\n  destroy(): void {\n    this.options.destroy?.()\n  }\n}\n","/* Copyright 2021, Prosemirror Adapter by Mirone. */\nimport type { EditorView } from 'prosemirror-view'\nimport type { CoreWidgetViewSpec, CoreWidgetViewUserOptions, WidgetDecorationSpec } from './CoreWidgetViewOptions'\n\nexport class CoreWidgetView<Component> {\n  dom: HTMLElement\n  pos: number\n  view?: EditorView\n  getPos?: () => number | undefined\n  spec?: WidgetDecorationSpec\n\n  options: CoreWidgetViewUserOptions<Component>\n\n  #createElement(as: string | HTMLElement) {\n    return as instanceof HTMLElement\n      ? as\n      : document.createElement(as)\n  }\n\n  constructor({ pos, spec, options }: CoreWidgetViewSpec<Component>) {\n    this.pos = pos\n    this.options = options\n    this.spec = spec\n\n    this.dom = this.#createElement(options.as)\n    this.dom.setAttribute('data-widget-view-root', 'true')\n  }\n\n  bind(view: EditorView, getPos: () => number | undefined) {\n    this.view = view\n    this.getPos = getPos\n  }\n\n  get component() {\n    return this.options.component\n  }\n}\n"],"names":["_createElement","createElement_fn","CoreNodeView","node","view","getPos","decorations","innerDecorations","options","__privateAdd","_a","_b","userUpdate","result","mutation","userIgnoreMutation","_c","attr","dispatch","state","pos","as","__privateMethod","CorePluginView","spec","root","prevState","CoreWidgetView"],"mappings":"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"}