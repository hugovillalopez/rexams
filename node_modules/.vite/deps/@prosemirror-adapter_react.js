import {
  Decoration
} from "./chunk-LPJCFVHB.js";
import "./chunk-G36XMPLZ.js";
import {
  require_react_dom
} from "./chunk-3ZJ2S23Y.js";
import {
  require_react
} from "./chunk-4AFIVRCK.js";
import {
  __toESM
} from "./chunk-DP4XHQAG.js";

// node_modules/@prosemirror-adapter/react/lib/index.es.js
var import_react = __toESM(require_react());

// node_modules/@prosemirror-adapter/core/lib/index.es.js
var D = (o, t, s) => {
  if (!t.has(o))
    throw TypeError("Cannot " + s);
};
var f = (o, t, s) => {
  if (t.has(o))
    throw TypeError("Cannot add the same private member more than once");
  t instanceof WeakSet ? t.add(o) : t.set(o, s);
};
var l = (o, t, s) => (D(o, t, "access private method"), s);
var d;
var m;
var O = class {
  constructor({ node: t, view: s, getPos: n, decorations: a, innerDecorations: w2, options: h2 }) {
    f(this, d);
    this.selected = false, this.selectNode = () => {
      var e, i;
      this.selected = true, (i = (e = this.options).selectNode) == null || i.call(e);
    }, this.deselectNode = () => {
      var e, i;
      this.selected = false, (i = (e = this.options).deselectNode) == null || i.call(e);
    }, this.shouldUpdate = (e) => !(e.type !== this.node.type || e.sameMarkup(this.node) && e.content.eq(this.node.content)), this.update = (e, i, r) => {
      var M2, g2;
      const c = this.options.update;
      let u;
      return c && (u = c(e, i, r)), typeof u != "boolean" && (u = this.shouldUpdate(e)), this.node = e, this.decorations = i, this.innerDecorations = r, u && ((g2 = (M2 = this.options).onUpdate) == null || g2.call(M2)), u;
    }, this.shouldIgnoreMutation = (e) => !this.dom || !this.contentDOM || this.node.isLeaf || this.node.isAtom ? true : e.type === "selection" ? false : this.contentDOM === e.target && e.type === "attributes" ? true : !this.contentDOM.contains(e.target), this.ignoreMutation = (e) => {
      if (!this.dom || !this.contentDOM)
        return true;
      let i;
      const r = this.options.ignoreMutation;
      return r && (i = r(e)), typeof i != "boolean" && (i = this.shouldIgnoreMutation(e)), i;
    }, this.destroy = () => {
      var e, i, r;
      (i = (e = this.options).destroy) == null || i.call(e), this.dom.remove(), (r = this.contentDOM) == null || r.remove();
    }, this.setAttrs = (e) => {
      const { dispatch: i, state: r } = this.view, c = this.getPos();
      if (typeof c == "number")
        return i(
          r.tr.setNodeMarkup(c, void 0, {
            ...this.node.attrs,
            ...e
          })
        );
    }, this.node = t, this.view = s, this.getPos = n, this.decorations = a, this.innerDecorations = w2, this.options = h2, this.dom = this.createDOM(h2.as), this.contentDOM = t.isLeaf ? null : this.createContentDOM(h2.contentAs), this.dom.setAttribute("data-node-view-root", "true"), this.contentDOM && (this.contentDOM.setAttribute("data-node-view-content", "true"), this.contentDOM.style.whiteSpace = "inherit"), this.setSelection = h2.setSelection, this.stopEvent = h2.stopEvent;
  }
  createDOM(t) {
    return l(this, d, m).call(this, t);
  }
  createContentDOM(t) {
    return l(this, d, m).call(this, t);
  }
  get component() {
    return this.options.component;
  }
};
d = /* @__PURE__ */ new WeakSet(), m = function(t) {
  const { node: s } = this;
  return t == null ? document.createElement(s.isInline ? "span" : "div") : t instanceof HTMLElement ? t : t instanceof Function ? t(s) : document.createElement(t);
};
var E = class {
  constructor(t) {
    this.view = t.view, this.options = t.options;
  }
  get component() {
    return this.options.component;
  }
  get root() {
    var s, n;
    let t = (n = (s = this.options).root) == null ? void 0 : n.call(s, this.view.dom);
    return t || (t = this.view.dom.parentElement ?? document.body), t;
  }
  update(t, s) {
    var n, a;
    this.view = t, this.prevState = s, (a = (n = this.options).update) == null || a.call(n, t, s);
  }
  destroy() {
    var t, s;
    (s = (t = this.options).destroy) == null || s.call(t);
  }
};
var p;
var v;
var b = class {
  constructor({ pos: t, spec: s, options: n }) {
    f(this, p);
    this.pos = t, this.options = n, this.spec = s, this.dom = l(this, p, v).call(this, n.as), this.dom.setAttribute("data-widget-view-root", "true");
  }
  bind(t, s) {
    this.view = t, this.getPos = s;
  }
  get component() {
    return this.options.component;
  }
};
p = /* @__PURE__ */ new WeakSet(), v = function(t) {
  return t instanceof HTMLElement ? t : document.createElement(t);
};

// node_modules/@prosemirror-adapter/react/node_modules/nanoid/index.browser.js
var nanoid = (size = 21) => crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {
  byte &= 63;
  if (byte < 36) {
    id += byte.toString(36);
  } else if (byte < 62) {
    id += (byte - 26).toString(36).toUpperCase();
  } else if (byte > 62) {
    id += "-";
  } else {
    id += "_";
  }
  return id;
}, "");

// node_modules/@prosemirror-adapter/react/lib/index.es.js
var import_react_dom = __toESM(require_react_dom());
var V = (0, import_react.createContext)({
  contentRef: () => {
  },
  view: null,
  getPos: () => 0,
  setAttrs: () => {
  },
  node: null,
  selected: false,
  decorations: [],
  innerDecorations: null
});
var I = () => (0, import_react.useContext)(V);
var P = (0, import_react.createContext)(
  (n) => {
    throw new Error("out of scope");
  }
);
var J = () => (0, import_react.useContext)(P);
var A = class extends O {
  constructor() {
    super(...arguments), this.key = nanoid(), this.context = {
      contentRef: (t) => {
        t && this.contentDOM && t.firstChild !== this.contentDOM && t.appendChild(this.contentDOM);
      },
      view: this.view,
      getPos: this.getPos,
      setAttrs: this.setAttrs,
      node: this.node,
      selected: this.selected,
      decorations: this.decorations,
      innerDecorations: this.innerDecorations
    }, this.updateContext = () => {
      Object.assign(this.context, {
        node: this.node,
        selected: this.selected,
        decorations: this.decorations,
        innerDecorations: this.innerDecorations
      });
    }, this.render = () => {
      const t = this.component;
      return (0, import_react_dom.createPortal)(
        import_react.default.createElement(V.Provider, { value: this.context }, import_react.default.createElement(t, null)),
        this.dom,
        this.key
      );
    };
  }
};
var x = (0, import_react.createContext)({
  view: null
});
var K = () => (0, import_react.useContext)(x);
var C = (0, import_react.createContext)(
  (n) => {
    throw new Error("out of scope");
  }
);
var L = () => (0, import_react.useContext)(C);
var F = (n, t) => (0, import_react.useCallback)(
  (e) => (d2, r, s, i, o) => {
    const c = new A({
      node: d2,
      view: r,
      getPos: s,
      decorations: i,
      innerDecorations: o,
      options: {
        ...e,
        onUpdate() {
          var a;
          (a = e.onUpdate) == null || a.call(e), n(c);
        },
        selectNode() {
          var a;
          (a = e.selectNode) == null || a.call(e), n(c);
        },
        deselectNode() {
          var a;
          (a = e.deselectNode) == null || a.call(e), n(c);
        },
        destroy() {
          var a;
          (a = e.destroy) == null || a.call(e), t(c);
        }
      }
    });
    return n(c, false), c;
  },
  [t, n]
);
var U = class extends E {
  constructor() {
    super(...arguments), this.key = nanoid(), this.context = {
      view: this.view,
      prevState: this.prevState
    }, this.updateContext = () => {
      Object.assign(this.context, {
        view: this.view,
        prevState: this.prevState
      });
    }, this.render = () => {
      const t = this.component;
      return (0, import_react_dom.createPortal)(
        import_react.default.createElement(x.Provider, { value: this.context }, import_react.default.createElement(t, null)),
        this.root,
        this.key
      );
    };
  }
};
var j = (n, t) => (0, import_react.useCallback)((e) => (d2) => {
  const r = new U({
    view: d2,
    options: {
      ...e,
      update: (s, i) => {
        var o;
        (o = e.update) == null || o.call(e, s, i), n(r);
      },
      destroy: () => {
        var s;
        (s = e.destroy) == null || s.call(e), t(r);
      }
    }
  });
  return n(r, false), r;
}, [t, n]);
var M = () => {
  const [n, t] = (0, import_react.useState)({}), u = (0, import_react.useRef)(false);
  (0, import_react.useEffect)(() => (requestAnimationFrame(() => {
    u.current = true;
  }), () => {
    u.current = false;
  }), []);
  const e = (0, import_react.useCallback)((s) => {
    u.current ? (0, import_react_dom.flushSync)(s) : s();
  }, []), d2 = (0, import_react.useCallback)(
    (s, i = true) => {
      e(() => {
        i && s.updateContext(), t((o) => ({
          ...o,
          [s.key]: s.render()
        }));
      });
    },
    [e]
  ), r = (0, import_react.useCallback)(
    (s) => {
      e(() => {
        t((i) => {
          const o = { ...i };
          return delete o[s.key], o;
        });
      });
    },
    [e]
  );
  return {
    portals: n,
    renderReactRenderer: d2,
    removeReactRenderer: r
  };
};
var f2 = (0, import_react.createContext)({
  view: null,
  getPos: () => {
  }
});
var Q = () => (0, import_react.useContext)(f2);
var y = (0, import_react.createContext)(
  (n) => {
    throw new Error("out of scope");
  }
);
var T = () => (0, import_react.useContext)(y);
var _ = class extends b {
  constructor() {
    super(...arguments), this.key = nanoid(), this.context = {
      view: this.view,
      getPos: this.getPos,
      spec: this.spec
    }, this.updateContext = () => {
      Object.assign(this.context, {
        view: this.view,
        getPos: this.getPos,
        spec: this.spec
      });
    }, this.render = () => {
      const t = this.component;
      return (0, import_react_dom.createPortal)(
        import_react.default.createElement(f2.Provider, { value: this.context }, import_react.default.createElement(t, null)),
        this.dom,
        this.key
      );
    };
  }
};
var S = (n, t) => (0, import_react.useCallback)((e) => (d2, r = {}) => {
  const s = new _({
    pos: d2,
    options: e
  }), i = {
    ...r,
    destroy: (o) => {
      var c;
      (c = r.destroy) == null || c.call(r, o), t(s);
    }
  };
  return s.spec = i, Decoration.widget(d2, (o, c) => (s.bind(o, c), n(s), s.dom), i);
}, [t, n]);
var X = ({ children: n }) => {
  const { renderReactRenderer: t, removeReactRenderer: u, portals: e } = M(), d2 = F(t, u), r = j(t, u), s = S(t, u), i = (0, import_react.useMemo)(() => Object.values(e), [e]);
  return import_react.default.createElement(P.Provider, { value: d2 }, import_react.default.createElement(C.Provider, { value: r }, import_react.default.createElement(y.Provider, { value: s }, n, i)));
};
export {
  X as ProsemirrorAdapterProvider,
  A as ReactNodeView,
  U as ReactPluginView,
  _ as ReactWidgetView,
  P as createNodeViewContext,
  C as createPluginViewContext,
  y as createWidgetViewContext,
  V as nodeViewContext,
  x as pluginViewContext,
  I as useNodeViewContext,
  J as useNodeViewFactory,
  K as usePluginViewContext,
  L as usePluginViewFactory,
  Q as useWidgetViewContext,
  T as useWidgetViewFactory,
  f2 as widgetViewContext
};
//# sourceMappingURL=@prosemirror-adapter_react.js.map
